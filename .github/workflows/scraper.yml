name: election scraper r

on:
  schedule:
    - cron: "0 8 * * *"  # 8 a.m. every day UTC
  push:
    branches: main

jobs:
  render:
    name: Scrape R test
    runs-on: macOS-latest   # Change to ubuntu-latest for simplicity, unless you need macOS

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2  # Upgrade to v3 if available

      # Install Pandoc (skip this step on ubuntu-latest since Pandoc is pre-installed)
      - name: Install Pandoc (macOS only)
        if: runner.os == 'macOS'
        run: |
          brew install pandoc
          pandoc --version

      # Install necessary R packages
      - name: Install dependencies
        run: Rscript -e "install.packages(c('rmarkdown', 'tidyverse', 'rvest', 'dplyr', 'lubridate'))"

      # Render the R Markdown file
      - name: Scrape the data from R markdown
        run: Rscript -e "rmarkdown::render('election_scraper_2024.rmd')"

      # Commit and push changes
      - name: Commit and Push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"
          git add .
          git commit -m "Latest data"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
